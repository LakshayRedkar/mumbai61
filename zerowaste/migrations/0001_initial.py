# Generated by Django 2.2.12 on 2022-01-13 11:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WasteSegregationDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_id', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('building_name', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('num_wings', models.CharField(blank=True, max_length=100, null=True)),
                ('wing_name', models.CharField(blank=True, max_length=100, null=True)),
                ('building_type', models.CharField(blank=True, max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('num_households_premises', models.CharField(blank=True, max_length=100, null=True)),
                ('num_shops_premises', models.CharField(blank=True, max_length=100, null=True)),
                ('type_waste_generator', models.CharField(blank=True, max_length=100, null=True)),
                ('waste_segregation', models.CharField(blank=True, max_length=100, null=True)),
                ('wet_waste_before_segregation', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('dry_waste_before_segregation', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('hazardous_waste', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('compostable_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('recyclable_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('rejected_waste', models.CharField(blank=True, max_length=100, null=True)),
                ('composting_type', models.CharField(blank=True, max_length=100, null=True)),
                ('compost_bin_by_mcgm', models.CharField(blank=True, max_length=100, null=True)),
                ('date_notice_issued', models.CharField(blank=True, max_length=100, null=True)),
                ('name_number', models.CharField(blank=True, max_length=100, null=True)),
                ('coll_date', models.DateField(blank=True, null=True)),
                ('building_bifurcation', models.CharField(blank=True, max_length=50, null=True)),
                ('admin_ward', models.CharField(blank=True, max_length=50, null=True)),
                ('councillor_ward', models.CharField(blank=True, max_length=50, null=True)),
                ('ward', models.CharField(blank=True, default='61', max_length=100, null=True)),
            ],
            options={
                'db_table': 'waste_segregation_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adminward', models.CharField(default='Ward-KWest', max_length=50)),
                ('councillorward', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('emp_category', models.CharField(max_length=100)),
                ('emp_name', models.CharField(max_length=100)),
                ('emp_mobile', models.IntegerField()),
            ],
            options={
                'db_table': 'employee_details',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Grievance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('audio_src', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('img_src', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('grievance', models.TextField(default='Testing')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('grievance_no', models.CharField(blank=True, default=None, max_length=100, null=True)),
            ],
            options={
                'db_table': 'grievance',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=10, null=True)),
                ('email', models.CharField(max_length=100, null=True)),
                ('service_swk', models.IntegerField(default='yes')),
                ('timing_swk', models.IntegerField(null=True)),
                ('mobile_swk', models.IntegerField(null=True)),
                ('compost_kit_garden', models.IntegerField(null=True)),
                ('communicate_swk', models.IntegerField(null=True)),
                ('solid_waste_man', models.IntegerField(null=True)),
                ('service_workers', models.IntegerField(null=True)),
                ('segregation', models.IntegerField(null=True)),
                ('recycle_process', models.IntegerField(null=True)),
                ('awareness', models.IntegerField(null=True)),
                ('role', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coll_date', models.DateField()),
                ('region_name', models.CharField(default='region A', max_length=100)),
                ('building_name', models.CharField(default='A', max_length=100)),
                ('wet_waste_bf', models.FloatField(blank=True, db_column='wet_waste_bf', null=True)),
                ('dry_waste_bf', models.FloatField(blank=True, db_column='dry_waste_bf', null=True)),
                ('hazardous_waste', models.FloatField(blank=True, db_column='hazardous_waste', null=True)),
                ('recyclable_waste', models.FloatField(blank=True, db_column='recyclable_waste', null=True)),
                ('compostable_waste', models.FloatField(blank=True, db_column='compostable_waste', null=True)),
                ('rejected_waste', models.FloatField(blank=True, db_column='rejected_waste', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('Ward', models.CharField(blank=True, choices=[('W1', 'A'), ('W2', 'B'), ('W3', 'C'), ('W4', 'D'), ('W5', 'E'), ('W6', 'F/N'), ('W7', 'F/S'), ('W8', 'G/N'), ('W9', 'G/S'), ('W10', 'H/E'), ('W11', 'H/W'), ('W12', 'K/E'), ('W13', 'K/W'), ('W14', 'L'), ('W15', 'M/E'), ('W16', 'M/W'), ('W17', 'N'), ('W18', 'P/N'), ('W19', 'P/S'), ('W20', 'R/C'), ('W21', 'R/N'), ('W22', 'R/S'), ('W23', 'S'), ('W24', 'T')], default=None, max_length=20, null=True)),
                ('prabhag', models.CharField(blank=True, choices=[('select one', 'select one')], default=None, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
